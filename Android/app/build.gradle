plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'org.jetbrains.kotlin.plugin.serialization'
    id 'com.google.gms.google-services'
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.ucl.hmssensyne"
        minSdk 25
        targetSdk 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
//                cppFlags ""
//                cppFlags "-frtti -fexceptions"
                abiFilters 'x86', 'x86_64', 'armeabi-v7a', 'arm64-v8a'
                arguments "-DOpenCV_DIR=" + opencvsdk + "/sdk/native/jni"
                cppFlags "-std=c++11 -frtti -fexceptions"
//                arguments "-DOpenCV_DIR=" + opencvsdk + "/sdk/native/jni" // , "-DANDROID_ARM_NEON=TRUE"
            }
        }

        splits {
            abi {
                enable true
                universalApk false
                reset()
                include 'arm64-v8a', 'armeabi-v7a', 'x86', 'x86_64', 'arm64-v8a'
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
    }
    buildFeatures {
        compose true
        dataBinding true
    }
    composeOptions {
        kotlinCompilerExtensionVersion "1.1.0"
        kotlinCompilerVersion '1.6.10'
    }
    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
            version '3.10.2'
        }
    }
    compileSdkVersion 31
    buildToolsVersion '31.0.0'
    ndkVersion '23.1.7779620'
//    packagingOptions {
//        pickFirst 'lib/arm64-v8a/libc++_shared.so'
//        pickFirst 'lib/x86/libc++_shared.so'
//        pickFirst 'lib/x86_64/libc++_shared.so'
//        pickFirst 'lib/armeabi-v7a/libc++_shared.so'
//    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    api("com.otaliastudios:cameraview:2.7.2")
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(path: ':opencv')
    implementation 'com.google.android.gms:play-services-auth:20.1.0'
    implementation 'com.google.firebase:firebase-messaging-ktx:23.0.0'
    implementation 'androidx.databinding:databinding-runtime:7.1.2'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation project(path: ':opencv')

    // Androidx Compose
    def compose_version = "1.1.1"
    // Add Jetpack Compose toolkit dependencies
    implementation "androidx.compose.ui:ui:$compose_version"
    // Tooling support (Previews, etc.)
    implementation "androidx.compose.ui:ui-tooling:$compose_version"
    // Foundation (Border, Background, Box, Image, Scroll, shapes, animations, etc.)
    implementation "androidx.compose.foundation:foundation:$compose_version"
    // Material Design
    implementation "androidx.compose.material:material:$compose_version"
    // Material design icons
    implementation "androidx.compose.material:material-icons-core:$compose_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    // Integration with observables
    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"
    implementation "androidx.compose.runtime:runtime-rxjava2:$compose_version"

    // Compose Navigation Dependency
    def navigation_version = "2.4.1"
    implementation "androidx.navigation:navigation-compose:$navigation_version"
    implementation "androidx.navigation:navigation-runtime-ktx:$navigation_version"

    // In charge of setContent
    implementation "androidx.activity:activity-compose:1.4.0"

    // Camera Dependencies
    def camera_version = "1.1.0-beta02"
    implementation "androidx.camera:camera-camera2:$camera_version"
    implementation "androidx.camera:camera-lifecycle:$camera_version"
    implementation "androidx.camera:camera-view:$camera_version"

    // UI Tests
    androidTestImplementation("androidx.compose.ui:ui-test-junit4:1.1.1")
    implementation 'org.jetbrains.kotlin:kotlin-script-runtime:1.6.20-RC'

    // Coroutines
    def coroutine_version = "1.6.0-native-mt"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:$coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.2"

    // CardView
    implementation 'androidx.cardview:cardview:1.0.0'

    //This dependency is used for Horizontal Pager
    implementation "com.google.accompanist:accompanist-pager:0.12.0"

    // Madrapps for Charts
    implementation 'com.github.madrapps:plot:0.1.2'

    // Ktor HTTP Client
    def ktor_version = "1.6.7"
    implementation "io.ktor:ktor-auth:$ktor_version"
    implementation "io.ktor:ktor-client-auth:$ktor_version"
    implementation "io.ktor:ktor-client-core:$ktor_version"
    implementation "io.ktor:ktor-client-android:$ktor_version"
    implementation "io.ktor:ktor-client-serialization:$ktor_version"
    implementation "io.ktor:ktor-client-logging:$ktor_version"

    implementation "ch.qos.logback:logback-classic:1.2.3"

    // Firebase auth
    def firebase_auth_version = "21.0.1"
    implementation "com.google.firebase:firebase-auth-ktx:$firebase_auth_version"
    implementation "com.google.firebase:firebase-auth:$firebase_auth_version"

    // Accompanist
    def accompanist_version = "0.18.0"
    implementation "com.google.accompanist:accompanist-permissions:$accompanist_version"
    implementation "com.google.accompanist:accompanist-swiperefresh:$accompanist_version"

}
